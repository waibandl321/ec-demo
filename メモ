ファイル名だけDBに登録する
ファイルを参照させる

PHP
//アップしたかどうかチェック
$uploaded = false;
if (!empty($_FILES['uploaded_file'])) { //アップ画像がfilesに入る
  $upload_dir = './upload_dir/'; //ディレクトリの設定
  $uploaded_file = $upload_dir . basename($_FILES['uploaded_file']['name']); //パスの作成 basename関数でファイル名だけ取得する + [name]に格納する （一次領域）
  move_uploaded_file($_FILES['uploaded_file']['tmp_name'], $uploaded_file); //move_uploaded_file関数でアップしたいディレクトリに移動
  $uploaded = true; //フラグをtrueにする
}

HTML
//enctype="multipart/form-data"を必ず指定する
<form enctype="multipart/form-data" action="index.php" method="POST">
    <input type="hidden" name="name" value="value" />
    アップロード: <input name="uploaded_file" type="file" />
    <input type="submit" value="ファイル送信" />
</form>

音声データなどの容量が大きいファイルの場合はPHPの設定を変える必要がる
デフォルト設定 2MB
上限を設ける理由：サーバーの負荷を抑える
参考記事：https://stackoverflow.com/questions/2184513/change-the-maximum-upload-file-size

$images = glob('./upload_dir/*');



画像自体は配信するサーバーに置く
- CDNを使用して配信する (AWSなど)
- IPアドレスから近いサーバーを選んで取得


//商品詳細ページ
■画像のhoverでカーゾルhoverした領域を拡大表示させる機能を実装
仕様
・画像をマウスオーバーした際に横に拡大プレビューを表示する
・元の画像はカルーセルで表示されている
・画像の大きさは予めわからない
・対応ブラウザはPCのモダンブラウザ（IE11, Edge, Firefox最新版, Chrome最新版, Safari最新版）

実装方法
・ルーペの表示
・拡大プレビューエリア
・表示・非表示の切り替え
・カーソル移動に合わせたプレビュー箇所の変更


//カート機能
・商品詳細画面
=>「個数」の入力と「カートに追加する」のボタンを用意
=>cartテーブルにinsert

・カートの中身を確認できる画面
=>カート確認画面で表示させるもの
=>商品名、商品画像、個数、合計金額を一覧で表示させて、下部で合計金額を表示
=>購入ボタンとキャンセルボタンを設置し、購入ボタンを押すと決済画面へ
=>キャンセルボタンを押すと商品一覧画面に遷移
=>「カートを空にする」ボタンを設置し、クリックしたらカート内の商品を0にする


//カートのマージ処理
カート内に同じアイテムがないかチェック
なかった場合はinsert
同じアイテムがカートにあった時は、数量の更新


カートページで数量の変更ができるように
削除機能


//パスワードの再設定の実装手順
■パスワードの再発行のためにユーザにメールを送信
=> ログインページで「パスワードを忘れた方はこちら」のリンクをクリック
=> 遷移先のページでメールアドレスを入力して送信ボタンを押す
=> 送信ボタンが押されたら、sha1(uniqid(rand(), true));でランダムな文字列を生成し、
パスワードのリセットTokenとしてデータベースに保存
=> リセットTokenを再設定用のURLのパラメーターとして設定
$passResetUrl = "http://localhost:8000/users/password_reissue.php?passResetCode=$passResetToken";
=> mb_send_mail()で入力されたメールアドレス宛に再設定用のURLを送付


■メールに記載されたURLをユーザーがクリックした際に、再設定処理準備
=> クリックされたURLのパラメータ(リセットToken)を取得し、データベースを検索
=> 一致するユーザーが存在する場合に、ユーザー情報を取得
=> ユーザー情報が存在する場合にpassword再設定用のフォームを表示


■ユーザーがpassword再設定用のformに新しいパスワードを入力して再設定処理
=> ユーザーの新しいパスワードを受け取ってデータベースのパスワードを更新
=> ログインページに遷移
=> 新しいパスワードを入力してログイン処理


//ローカル環境でgmailを使用してメールを送信するための設定
https://dezanari.com/mamp-mail/
https://uxmilk.jp/15057

//Token用のランダムな文字列を生成
https://ysklog.net/php/2103.html

